"use client";
import React from "react";
import { Flex, Text, TextField, Button, Box, IconButton } from "@radix-ui/themes";
import { useTranslation } from "react-i18next";
import { PlusIcon, Cross2Icon, GlobeIcon, LockClosedIcon, ChatBubbleIcon, CameraIcon, Share1Icon } from "@radix-ui/react-icons";

// SVG Icons for social platforms
const WhatsAppIcon = () => (
  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
    <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413Z"/>
  </svg>
);

const TelegramIcon = () => (
  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
    <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"/>
  </svg>
);

const InstagramIcon = () => (
  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
    <path d="M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z"/>
  </svg>
);

const TwitterIcon = () => (
  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
    <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
  </svg>
);

const SnapchatIcon = () => (
  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
    <path d="M12.206.793c.99 0 4.347.276 5.93 3.821.529 1.193.403 3.219.299 4.847l-.003.06c-.012.18-.022.345-.03.51.075.045.203.09.401.09.3-.016.659-.12 1.033-.301.165-.088.344-.104.464-.104.182 0 .359.029.509.09.45.149.734.479.734.838.015.449-.39.839-1.213 1.168-.089.029-.209.075-.344.119-.45.135-1.139.36-1.333.81-.09.224-.061.524.12.868l.015.015c.06.136 1.526 3.475 4.791 4.014.255.044.435.27.42.509 0 .075-.015.149-.045.225-.24.569-1.273.988-3.146 1.271-.059.091-.12.375-.164.57-.029.179-.074.36-.134.553-.076.271-.27.405-.555.405h-.03c-.135 0-.313-.031-.538-.074-.36-.075-.765-.135-1.273-.135-.3 0-.599.015-.913.074-.6.104-1.123.464-1.723.884-.853.599-1.826 1.288-3.294 1.288-.06 0-.119-.015-.18-.015h-.149c-1.468 0-2.427-.675-3.279-1.288-.599-.42-1.107-.779-1.707-.884-.314-.045-.629-.074-.928-.074-.54 0-.958.089-1.272.149-.211.043-.391.074-.54.074-.374 0-.523-.224-.583-.42-.061-.192-.09-.389-.135-.567-.046-.181-.105-.494-.166-.57-1.918-.222-2.95-.642-3.189-1.226-.031-.063-.052-.15-.055-.225-.015-.243.165-.465.42-.509 3.264-.54 4.73-3.879 4.791-4.02l.016-.029c.18-.345.224-.645.119-.869-.195-.434-.884-.658-1.332-.809-.121-.029-.24-.074-.346-.119-1.107-.435-1.257-.93-1.197-1.273.09-.479.674-.793 1.168-.793.146 0 .27.029.383.074.42.194.789.3 1.104.3.234 0 .384-.06.465-.105l-.046-.569c-.098-1.626-.225-3.651.307-4.837C7.392 1.077 10.739.807 11.727.807l.419-.015h.06z"/>
  </svg>
);

const SignalIcon = () => (
  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
    <path d="M12.003 23.274c6.225 0 11.272-5.047 11.272-11.272S18.228.73 12.003.73.73 5.777.73 12.002s5.048 11.272 11.273 11.272zM5.616 14.705a.875.875 0 01-.831-.583.877.877 0 01.476-1.138 7.084 7.084 0 013.923-1.155c1.38 0 2.736.403 3.923 1.155a.877.877 0 01.476 1.138.875.875 0 01-.831.583.873.873 0 01-.406-.1 5.33 5.33 0 00-3.162-.868c-1.122 0-2.227.31-3.162.868a.873.873 0 01-.406.1zm-.958-3.458a.875.875 0 01-.831-.583.877.877 0 01.476-1.138 10.61 10.61 0 015.88-1.732c2.07 0 4.106.605 5.88 1.732a.877.877 0 01.476 1.138.875.875 0 01-.831.583.873.873 0 01-.406-.1 8.86 8.86 0 00-5.119-1.545 8.86 8.86 0 00-5.119 1.545.873.873 0 01-.406.1zm-.958-3.458a.875.875 0 01-.831-.583.877.877 0 01.476-1.138A14.137 14.137 0 0112.003 4.34c2.76 0 5.476.806 7.838 2.328a.877.877 0 01.476 1.138.875.875 0 01-.831.583.873.873 0 01-.406-.1 12.387 12.387 0 00-7.077-2.141c-2.504 0-4.972.73-7.077 2.141a.873.873 0 01-.406.1z"/>
  </svg>
);

const ViberIcon = () => (
  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
    <path d="M11.398.002C9.473.028 5.331.344 3.014 2.467 1.294 4.177.693 6.698.623 9.82c-.06 3.11-.13 8.95 5.5 10.541v2.42s-.038.97.602 1.17c.79.25 1.24-.499 1.99-1.299l1.4-1.58c3.85.32 6.8-.419 7.14-.529.78-.25 5.181-.811 5.901-6.652.74-6.031-.36-9.831-2.34-11.551l-.01-.002c-.6-.55-2.75-2.32-8.37-2.32zm.11 1.75c4.85.02 6.85 1.4 7.35 1.85l.01.002c1.63 1.42 2.46 4.56 1.84 9.65-.59 4.84-3.9 5.11-4.56 5.32-.28.09-2.88.73-6.14.49 0 0-2.43 2.93-3.19 3.71-.12.13-.26.17-.35.15-.13-.03-.17-.19-.16-.42l.02-4.01c-4.71-1.33-4.43-6.28-4.38-8.94.06-2.65.58-4.75 1.99-6.03 1.88-1.76 5.32-2.02 7.11-1.99zm.58 2.37c-.37-.02-.63.09-.63.42 0 .32.25.41.54.42 2.77.2 4.99 2.4 5.2 5.16.03.29.1.53.42.53s.48-.24.46-.53c-.22-3.2-2.78-5.75-5.99-5.98zm-3.07.29c-.38 0-.72.05-1.03.15-.3.1-.57.25-.82.44s-.46.42-.64.7c-.17.27-.3.58-.37.92-.04.18-.06.38-.06.59 0 .27.03.56.1.87.06.31.15.64.27.98.12.35.27.7.44 1.07.17.37.38.74.62 1.12.23.38.5.76.81 1.14.3.38.65.76 1.03 1.14.39.39.81.77 1.27 1.15.46.38.96.74 1.5 1.08.54.35 1.12.66 1.73.94.61.28 1.26.51 1.94.69.39.1.75.18 1.09.22.34.05.66.07.96.07.27 0 .54-.02.81-.06.27-.04.54-.11.81-.21.27-.1.54-.24.81-.42.27-.18.54-.41.81-.7.21-.21.4-.45.57-.73.17-.27.25-.58.25-.93 0-.28-.1-.55-.3-.82-.2-.27-.47-.52-.82-.75l-1.05-.66c-.32-.2-.59-.35-.82-.45-.23-.1-.43-.15-.61-.15-.24 0-.46.09-.67.26-.21.17-.41.38-.59.62l-.35.48c-.12.15-.27.23-.45.23-.12 0-.26-.04-.42-.11-.16-.07-.34-.17-.54-.29-.2-.12-.42-.27-.65-.44-.23-.17-.47-.37-.72-.59-.24-.22-.47-.46-.69-.72-.22-.26-.42-.53-.59-.81-.17-.28-.31-.55-.42-.82-.11-.27-.16-.52-.16-.75 0-.22.09-.41.27-.57l.48-.35c.28-.21.51-.41.69-.61.18-.2.27-.42.27-.67 0-.18-.05-.38-.15-.61-.1-.23-.25-.5-.45-.82l-.66-1.05c-.23-.35-.48-.62-.75-.82-.27-.2-.54-.3-.82-.3zm.01.48c.16 0 .33.06.51.17.18.11.38.29.59.55l.66 1.05c.16.26.29.49.39.68.1.19.15.35.15.48 0 .11-.04.21-.11.3-.07.09-.19.21-.35.36l-.48.35c-.35.26-.53.56-.53.91 0 .32.07.65.22 1 .15.35.33.69.55 1.03.22.34.47.68.75 1.02.28.34.58.65.89.94.31.29.63.55.96.78.33.23.65.43.96.59.31.16.6.28.87.37.27.09.49.13.67.13.35 0 .65-.18.91-.53l.35-.48c.12-.16.24-.28.36-.36.12-.08.23-.12.33-.12.13 0 .29.05.48.15.19.1.42.23.68.39l1.05.66c.26.21.44.41.55.59.11.18.17.35.17.51 0 .22-.06.44-.17.67-.11.23-.27.45-.48.67-.23.23-.48.43-.75.59-.27.16-.54.28-.81.36-.27.08-.54.14-.81.17-.27.03-.54.05-.81.05-.27 0-.56-.02-.87-.06-.31-.04-.64-.11-.99-.21-.63-.17-1.24-.39-1.82-.66-.58-.27-1.14-.57-1.66-.91-.52-.34-1-.7-1.44-1.07-.44-.37-.84-.74-1.21-1.11-.37-.37-.71-.74-1.03-1.11-.32-.37-.61-.74-.87-1.11-.26-.37-.49-.74-.69-1.11-.2-.37-.37-.74-.51-1.11-.14-.37-.25-.74-.33-1.11-.08-.37-.12-.74-.12-1.11 0-.17.01-.34.04-.51.03-.17.08-.34.15-.51.14-.34.34-.66.59-.96.25-.3.54-.56.87-.78.33-.22.69-.39 1.08-.51.39-.12.8-.18 1.23-.18z"/>
  </svg>
);

const WeChatIcon = () => (
  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
    <path d="M8.691 2.188C3.891 2.188 0 5.476 0 9.53c0 2.212 1.17 4.203 3.002 5.55a.59.59 0 01.213.665l-.39 1.48c-.019.07-.048.141-.048.213 0 .163.13.295.29.295a.326.326 0 00.167-.054l1.903-1.114a.864.864 0 01.717-.098 10.16 10.16 0 002.837.403c.276 0 .543-.027.811-.05-.857-2.578.157-4.972 1.932-6.446 1.703-1.415 3.882-1.98 5.853-1.838-.576-3.583-4.196-6.348-8.596-6.348zM5.785 5.991c.642 0 1.162.529 1.162 1.18a1.17 1.17 0 01-1.162 1.178A1.17 1.17 0 014.623 7.17c0-.651.52-1.18 1.162-1.18zm5.813 0c.642 0 1.162.529 1.162 1.18a1.17 1.17 0 01-1.162 1.178 1.17 1.17 0 01-1.162-1.178c0-.651.52-1.18 1.162-1.18zm5.34 2.867c-1.797-.052-3.746.512-5.28 1.786-1.72 1.428-2.687 3.72-1.78 6.22.942 2.453 3.666 4.229 6.884 4.229.826 0 1.622-.12 2.361-.336a.722.722 0 01.598.082l1.584.926a.272.272 0 00.14.047c.134 0 .24-.111.24-.247 0-.06-.023-.12-.038-.177l-.327-1.233a.582.582 0 01.265-.694c1.584-1.168 2.577-2.886 2.577-4.784 0-3.526-3.407-6.386-7.613-6.386l-.611-.033zm-2.242 3.151c.535 0 .969.44.969.982a.976.976 0 01-.969.983.976.976 0 01-.969-.983c0-.542.434-.982.969-.982zm4.655 0c.535 0 .969.44.969.982a.976.976 0 01-.969.983.976.976 0 01-.969-.983c0-.542.434-.982.969-.982z"/>
  </svg>
);

const LineIcon = () => (
  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
    <path d="M19.365 9.863c.349 0 .63.285.63.631 0 .345-.281.63-.63.63H17.61v1.125h1.755c.349 0 .63.283.63.63 0 .344-.281.629-.63.629h-2.386c-.345 0-.627-.285-.627-.629V8.108c0-.345.282-.63.63-.63h2.386c.346 0 .627.285.627.63 0 .349-.281.63-.63.63H17.61v1.125h1.755zm-3.855 3.016c0 .27-.174.51-.432.596-.064.021-.133.031-.199.031-.211 0-.391-.09-.51-.25l-2.443-3.317v2.94c0 .344-.279.629-.631.629-.346 0-.626-.285-.626-.629V8.108c0-.27.173-.51.43-.595.06-.023.136-.033.194-.033.195 0 .375.104.495.254l2.462 3.33V8.108c0-.345.282-.63.63-.63.345 0 .63.285.63.63v4.771zm-5.741 0c0 .344-.282.629-.631.629-.345 0-.627-.285-.627-.629V8.108c0-.345.282-.63.63-.63.346 0 .628.285.628.63v4.771zm-2.466.629H4.917c-.345 0-.63-.285-.63-.629V8.108c0-.345.285-.63.63-.63.348 0 .63.285.63.63v4.141h1.756c.348 0 .629.283.629.63 0 .344-.282.629-.629.629M24 10.314C24 4.943 18.615.572 12 .572S0 4.943 0 10.314c0 4.811 4.27 8.842 10.035 9.608.391.082.923.258 1.058.59.12.301.079.766.038 1.08l-.164 1.02c-.045.301-.24 1.186 1.049.645 1.291-.539 6.916-4.078 9.436-6.975C23.176 14.393 24 12.458 24 10.314"/>
  </svg>
);

const OnlyFansIcon = () => (
  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
    <path d="M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm6.775 15.985c-.25.25-.575.375-.9.375s-.65-.125-.9-.375l-4.975-4.975-4.975 4.975c-.5.5-1.3.5-1.8 0s-.5-1.3 0-1.8l5.875-5.875c.5-.5 1.3-.5 1.8 0l5.875 5.875c.5.5.5 1.3 0 1.8z"/>
  </svg>
);

const CONTACT_METHODS = [
  { key: "whatsapp", label: "WhatsApp", IconComponent: WhatsAppIcon, placeholder: "+49 123 456789" },
  { key: "telegram", label: "Telegram", IconComponent: TelegramIcon, placeholder: "@username" },
  { key: "signal", label: "Signal", IconComponent: SignalIcon, placeholder: "+49 123 456789" },
  { key: "viber", label: "Viber", IconComponent: ViberIcon, placeholder: "+49 123 456789" },
  { key: "wechat", label: "WeChat", IconComponent: WeChatIcon, placeholder: "WeChat ID" },
  { key: "line", label: "LINE", IconComponent: LineIcon, placeholder: "LINE ID" },
  { key: "snapchat", label: "Snapchat", IconComponent: SnapchatIcon, placeholder: "@username" },
  { key: "instagram", label: "Instagram", IconComponent: InstagramIcon, placeholder: "@username" },
  { key: "twitter", label: "Twitter/X", IconComponent: TwitterIcon, placeholder: "@username" },
  { key: "onlyfans", label: "OnlyFans", IconComponent: OnlyFansIcon, placeholder: "@username" },
  { key: "website", label: "Website", IconComponent: GlobeIcon, placeholder: "https://..." }
];

interface ContactTabProps {
  contactData: {[key: string]: string};
  setContactData: (v: {[key: string]: string}) => void;
  onSave: () => void;
  saving: string | null;
}

export default function ContactTab(props: ContactTabProps) {
  const { t } = useTranslation();
  const [selectedMethods, setSelectedMethods] = React.useState<string[]>([]);

  React.useEffect(() => {
    const active = CONTACT_METHODS.filter(m => props.contactData[m.key]).map(m => m.key);
    setSelectedMethods(active);
  }, [props.contactData]);

  const addMethod = (key: string) => {
    if (!selectedMethods.includes(key)) {
      setSelectedMethods([...selectedMethods, key]);
    }
  };

  const removeMethod = (key: string) => {
    setSelectedMethods(selectedMethods.filter(k => k !== key));
    const copy = {...props.contactData};
    delete copy[key];
    props.setContactData(copy);
  };

  return (
    <Flex direction="column" gap="4">
      <Box className="rounded-md p-3" style={{ background: "var(--gray-3)" }}>
        <Text as="div" size="2" weight="bold" className="block mb-3">
          Kontaktmethoden auswählen
        </Text>
        <div style={{ display: "grid", gridTemplateColumns: "repeat(auto-fill, minmax(180px, 1fr))", gap: 8 }}>
          {CONTACT_METHODS.map((method) => {
            const isSelected = selectedMethods.includes(method.key);
            const Icon = method.IconComponent;
            return (
              <Button
                key={method.key}
                size="2"
                variant={isSelected ? "solid" : "soft"}
                onClick={() => isSelected ? removeMethod(method.key) : addMethod(method.key)}
              >
                <span style={{ marginRight: 6, display: "flex", alignItems: "center" }}><Icon /></span>
                {method.label}
              </Button>
            );
          })}
        </div>
      </Box>

      {selectedMethods.length > 0 && (
        <Box className="rounded-md p-3" style={{ background: "var(--gray-3)" }}>
          <Text as="div" size="2" weight="bold" className="block mb-3">
            Kontaktdaten eingeben
          </Text>
          <Flex direction="column" gap="3">
            {selectedMethods.map((key) => {
              const method = CONTACT_METHODS.find(m => m.key === key);
              if (!method) return null;
              const Icon = method.IconComponent;
              return (
                <Box key={key} p="3" style={{ background: "var(--gray-2)", borderRadius: 8 }}>
                  <Flex align="center" gap="2">
                    <div style={{ minWidth: 30, display: "flex", alignItems: "center", justifyContent: "center" }}>
                      <Icon />
                    </div>
                    <div style={{ flex: 1 }}>
                      <Text size="1" weight="bold" className="block mb-1">
                        {method.label}
                      </Text>
                      <TextField.Root
                        size="2"
                        placeholder={method.placeholder}
                        value={props.contactData[key] || ""}
                        onChange={(e) => {
                          props.setContactData({
                            ...props.contactData,
                            [key]: e.target.value
                          });
                        }}
                      />
                    </div>
                    <IconButton
                      size="2"
                      variant="soft"
                      color="red"
                      onClick={() => removeMethod(key)}
                    >
                      <Cross2Icon />
                    </IconButton>
                  </Flex>
                </Box>
              );
            })}
          </Flex>
        </Box>
      )}

      <Flex justify="end">
        <Button onClick={props.onSave} disabled={props.saving === "escort"}>
          {props.saving === "escort" ? t("common.saving") : t("profile.fields.save")}
        </Button>
      </Flex>
    </Flex>
  );
}
